
proc createArray5
	mov r1,8
    mul r2,r1,r0
    add r2,r2,r1
    call mem,r2
    st r0,r2
    mov r0,r2
    ret
proc arrayLength5
	ld r0,r0
    ret
proc out_of_bount7
	ld r2,r0          # size of array
    cmp< r2,r2,r1     # index < size := 1
    jnz  r2,ofb_out   # its ok  
    call exit,r0
ofb_out:
    ret
proc getInt9
	call iget,r0
    ret
proc printInt11
	call iputi,r0
    ret
proc printc11
	call iputc,r0
    ret
proc printString11
	mov r2,1
    mov r3,8
    ld r1,r0           # size of str
nexch:
    cmp>= r2,r1,r2     # n >= (r2=1)
    jz r2,out          # r2 == 0 jump to end
    mov r0,r0,r3       # next cell
    call printChar,r0  # print ch
    sub r1,r1,r2       # n--;
out:
    ret
proc exit13
	jmp _exit:
    ret
proc main
	mov r1,115
	mov r2,r1
	mov r3,r2
	call printc11,r3
	mov r4,r3
	mov r5,105
	mov r6,r5
	mov r7,r6
	call printc11,r7
	mov r8,r7
	mov r9,122
	mov r10,r9
	mov r11,r10
	call printc11,r11
	mov r12,r11
	mov r13,101
	mov r14,r13
	mov r15,r14
	call printc11,r15
	mov r16,r15
	mov r17,32
	mov r18,r17
	mov r19,r18
	call printc11,r19
	mov r20,r19
	mov r21,58
	mov r22,r21
	mov r23,r22
	call printc11,r23
	mov r24,r23
	mov r25,32
	mov r26,r25
	mov r27,r26
	call printc11,r27
	mov r28,r27
	call getInt9,r30
	mov r29,r30
	mov r31,r30
	mov r34,r29
	mov r35,r34
	call createArray5,r35
	mov r32,r35
	mov r36,r35
	mov r37,105
	mov r38,r37
	mov r39,r38
	call printc11,r39
	mov r40,r39
	mov r41,110
	mov r42,r41
	mov r43,r42
	call printc11,r43
	mov r44,r43
	mov r45,105
	mov r46,r45
	mov r47,r46
	call printc11,r47
	mov r48,r47
	mov r49,116
	mov r50,r49
	mov r51,r50
	call printc11,r51
	mov r52,r51
	mov r53,32
	mov r54,r53
	mov r55,r54
	call printc11,r55
	mov r56,r55
	mov r57,58
	mov r58,r57
	mov r59,r58
	call printc11,r59
	mov r60,r59
	mov r61,10
	mov r62,r61
	mov r63,r62
	call printc11,r63
	mov r64,r63
	mov r66,r32
	mov r67,r66
	call arrayLength5,r67
	mov r68,1
	sub r69,r67,r68
	mov r70,r69
	mov r73,1
	mov r71,0
L1:
	cmp<= r72,r71,r70
	jz r72,L2
	mov r74,32
	mov r75,r74
	mov r76,r75
	call printc11,r76
	mov r77,r76
	mov r78,65
	mov r79,r78
	mov r80,r79
	call printc11,r80
	mov r81,r80
	mov r82,91
	mov r83,r82
	mov r84,r83
	call printc11,r84
	mov r85,r84
	mov r87,r71
	mov r88,r87
	call printInt11,r88
	mov r89,r88
	mov r90,93
	mov r91,r90
	mov r92,r91
	call printc11,r92
	mov r93,r92
	mov r94,58
	mov r95,r94
	mov r96,r95
	call printc11,r96
	mov r97,r96
	mov r98,r71
	mov r99,1
	mov r100,8
	add r98,r98,r99
	mul r100,r100,r98
	add r100,r100,r32
	call getInt9,r30
	st r30,r100
	mov r101,r30
	add r71,r71,r73
	jmp L1
L2:
	mov r102,110
	mov r103,r102
	mov r104,r103
	call printc11,r104
	mov r105,r104
	mov r106,117
	mov r107,r106
	mov r108,r107
	call printc11,r108
	mov r109,r108
	mov r110,109
	mov r111,r110
	mov r112,r111
	call printc11,r112
	mov r113,r112
	mov r114,98
	mov r115,r114
	mov r116,r115
	call printc11,r116
	mov r117,r116
	mov r118,101
	mov r119,r118
	mov r120,r119
	call printc11,r120
	mov r121,r120
	mov r122,114
	mov r123,r122
	mov r124,r123
	call printc11,r124
	mov r125,r124
	mov r126,32
	mov r127,r126
	mov r128,r127
	call printc11,r128
	mov r129,r128
	mov r130,58
	mov r131,r130
	mov r132,r131
	call printc11,r132
	mov r133,r132
	mov r134,32
	mov r135,r134
	mov r136,r135
	call printc11,r136
	mov r137,r136
	mov r138,r32
	mov r141,1
	mov r144,8
	mov r142,r138
	ld r142,r142
	mov r143,r138
L3:
	cmp>= r140,r142,r141
	jz r140,L4
	sub r142,r142,r141
	add r143,r143,r144
	ld r139,r143
	mov r145,r139
	mov r146,r145
	call printInt11,r146
	mov r147,r146
	jmp L3
L4:
	mov r148,0
	mov r149,r148
	mov r0,r149
	jmp L0
L0:
	ret
